// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    // increment out[t] if needed
    Inc16(in=prevOut, out=incedIn);

    /*  Allow each argument to set a different pin, and make each pin run accordingly
        - 000 (a) -> out
        - 001 (b) -> inc
        - 010 (c) -> load
        - 011 (d) -> load
        - 100 (e) -> reset  
        - 101 (f) -> reset
        - 110 (g) -> reset      
        - 111 (h) -> reset
    */
    Mux8Way16(a=prevOut, b=incedIn, c=in, d=in, e=false, f=false, g=false, h=false, sel[2]=reset, sel[1]=load, sel[0]=inc, out=output);

    // always load from the register, as the previous output is already stored.
    Register(in=output, load=true, out=out, out=prevOut);

}
